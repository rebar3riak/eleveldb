github.com tag 2.0.34 - February 15, 2017
-----------------------------------------
mv-hot-backup2:  - correct MakeTieredDbname() within db/filename.cc
                   for case where dbname input is blank and fast/slow
                   already populated in options.  Corrects issue
                   with hot backup in non-tiered storage situations

github.com tag 2.0.33 - November 21, 2016
-----------------------------------------
mv-bucket-expiry:  - partial branch to enable X-Riak-Meta-Expiry-Base-Seconds
                     property within enterprise edition

github.com tag 2.0.32 - November 8, 2016
----------------------------------------
 - version shipped with Riak 2.2
** additional race condition hardening when faced with two threads on same iterator
**  (one iterating async_iterator_move() and one closing async_iterator_close())
 - wrap async_iterator_move operations with locked CloseMutex
 - create and then use new manual SpinLock within RetrieveItrObject
 - adapt origin spin lock code for Solaris / SmartOS compiling

github.com tag 2.0.31 - November 1, 2016
----------------------------------------
 - includes leveldb 2.0.31 (mv-no-md-expiry & mv-tuning8)
mv-ref-hardening:   - series of thread hardening changes
                      related to AAE use of iterators. Biggest
                      fix was isolating AAE using one thread to
                      close while another was still moving, then
                      defending against it

github.com tag 2.0.30 - October 11, 2016
----------------------------------------
 - includes leveldb 2.0.30 (mv-delayed-bloom)

github.com tag 2.0.28 - September 7, 2016
-----------------------------------------
Clarify which compression algorithm used for default:
  1. leveldb open source users: lz4 default
  2. eleveldb open source users: snappy default
  3. riak.conf / app.config users of older generation: snappy default
  4. riak.conf from Riak 2.2: lz4 default

github.com tag 2.0.27 - August 22, 2016
---------------------------------------
mv-mem-fences:  fix iterator double delete bug in eleveldb and
                build better memory fenced operations for referenced count objects.

github.com tag 2.0.25 - August 10, 2016
---------------------------------------
 - make LZ4 the default compression instead of Snappy.
 - update compression flag in eleveldb.schema to support
   choosing Snappy or LZ4
 - add expiry settings to eleveldb.schema
 - disable cuttlefish as dependency riak.conf

github.com tag 2.0.22 - June 21, 2016
-------------------------------------
 - branch mv-iter-valid (PR 199): adjust recent code accessing iterator->Valid() where
   underlying iterator could be deleted ... now cache Valid().
 - eleveldb only, no leveldb changes

github.com tag 2.0.21 - June 17, 2016
-------------------------------------
 - update to leveldb 2.0.21 (correct hot threads for iterator hang)
 - temporary iterator debug code still in this release

github.com tag 2.0.10
-------------------------------------
 - version shipped with 2.1.3
